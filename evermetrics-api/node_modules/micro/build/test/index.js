'use strict';

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _microCore = require('micro-core');

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _listen = require('./_listen');

var _listen2 = _interopRequireDefault(_listen);

var _thenSleep = require('then-sleep');

var _thenSleep2 = _interopRequireDefault(_thenSleep);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('send(200, <String>)', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(t) {
    var fn, url, res;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(req, res) {
                return _regenerator2.default.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        (0, _microCore.send)(res, 200, 'woot');

                      case 1:
                      case 'end':
                        return _context.stop();
                    }
                  }
                }, _callee, undefined);
              }));
              return function fn(_x2, _x3) {
                return ref.apply(this, arguments);
              };
            }();

            _context2.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context2.sent;
            _context2.next = 6;
            return (0, _requestPromise2.default)(url);

          case 6:
            res = _context2.sent;


            t.same(res, 'woot');

          case 8:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, undefined);
  }));
  return function (_x) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('send(200, <Object>)', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4(t) {
    var fn, url, res;
    return _regenerator2.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(req, res) {
                return _regenerator2.default.wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        (0, _microCore.send)(res, 200, { a: 'b' });

                      case 1:
                      case 'end':
                        return _context3.stop();
                    }
                  }
                }, _callee3, undefined);
              }));
              return function fn(_x5, _x6) {
                return ref.apply(this, arguments);
              };
            }();

            _context4.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context4.sent;
            _context4.next = 6;
            return (0, _requestPromise2.default)(url, { json: true });

          case 6:
            res = _context4.sent;


            t.same(res, { a: 'b' });

          case 8:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, undefined);
  }));
  return function (_x4) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('send(<Number>)', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6(t) {
    var fn, url;
    return _regenerator2.default.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5(req, res) {
                return _regenerator2.default.wrap(function _callee5$(_context5) {
                  while (1) {
                    switch (_context5.prev = _context5.next) {
                      case 0:
                        (0, _microCore.send)(res, 404);

                      case 1:
                      case 'end':
                        return _context5.stop();
                    }
                  }
                }, _callee5, undefined);
              }));
              return function fn(_x8, _x9) {
                return ref.apply(this, arguments);
              };
            }();

            _context6.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context6.sent;
            _context6.prev = 4;
            _context6.next = 7;
            return (0, _requestPromise2.default)(url);

          case 7:
            _context6.next = 12;
            break;

          case 9:
            _context6.prev = 9;
            _context6.t0 = _context6['catch'](4);

            t.same(_context6.t0.statusCode, 404);

          case 12:
          case 'end':
            return _context6.stop();
        }
      }
    }, _callee6, undefined, [[4, 9]]);
  }));
  return function (_x7) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('return <String>', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee8(t) {
    var fn, url, res;
    return _regenerator2.default.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7(req, res) {
                return _regenerator2.default.wrap(function _callee7$(_context7) {
                  while (1) {
                    switch (_context7.prev = _context7.next) {
                      case 0:
                        return _context7.abrupt('return', 'woot');

                      case 1:
                      case 'end':
                        return _context7.stop();
                    }
                  }
                }, _callee7, undefined);
              }));
              return function fn(_x11, _x12) {
                return ref.apply(this, arguments);
              };
            }();

            _context8.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context8.sent;
            _context8.next = 6;
            return (0, _requestPromise2.default)(url);

          case 6:
            res = _context8.sent;


            t.same(res, 'woot');

          case 8:
          case 'end':
            return _context8.stop();
        }
      }
    }, _callee8, undefined);
  }));
  return function (_x10) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('return <Promise>', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee11(t) {
    var fn, url, res;
    return _regenerator2.default.wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee10(req, res) {
                return _regenerator2.default.wrap(function _callee10$(_context10) {
                  while (1) {
                    switch (_context10.prev = _context10.next) {
                      case 0:
                        return _context10.abrupt('return', new _promise2.default(function () {
                          var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee9(resolve) {
                            return _regenerator2.default.wrap(function _callee9$(_context9) {
                              while (1) {
                                switch (_context9.prev = _context9.next) {
                                  case 0:
                                    _context9.next = 2;
                                    return (0, _thenSleep2.default)(100);

                                  case 2:
                                    resolve('I Promise');

                                  case 3:
                                  case 'end':
                                    return _context9.stop();
                                }
                              }
                            }, _callee9, undefined);
                          }));
                          return function (_x16) {
                            return ref.apply(this, arguments);
                          };
                        }()));

                      case 1:
                      case 'end':
                        return _context10.stop();
                    }
                  }
                }, _callee10, undefined);
              }));
              return function fn(_x14, _x15) {
                return ref.apply(this, arguments);
              };
            }();

            _context11.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context11.sent;
            _context11.next = 6;
            return (0, _requestPromise2.default)(url);

          case 6:
            res = _context11.sent;


            t.same(res, 'I Promise');

          case 8:
          case 'end':
            return _context11.stop();
        }
      }
    }, _callee11, undefined);
  }));
  return function (_x13) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('sync return <String>', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee12(t) {
    var fn, url, res;
    return _regenerator2.default.wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            fn = function fn(req, res) {
              return 'argon';
            };

            _context12.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context12.sent;
            _context12.next = 6;
            return (0, _requestPromise2.default)(url);

          case 6:
            res = _context12.sent;


            t.same(res, 'argon');

          case 8:
          case 'end':
            return _context12.stop();
        }
      }
    }, _callee12, undefined);
  }));
  return function (_x17) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('return empty string', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee14(t) {
    var fn, url, res;
    return _regenerator2.default.wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee13(req, res) {
                return _regenerator2.default.wrap(function _callee13$(_context13) {
                  while (1) {
                    switch (_context13.prev = _context13.next) {
                      case 0:
                        return _context13.abrupt('return', '');

                      case 1:
                      case 'end':
                        return _context13.stop();
                    }
                  }
                }, _callee13, undefined);
              }));
              return function fn(_x19, _x20) {
                return ref.apply(this, arguments);
              };
            }();

            _context14.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context14.sent;
            _context14.next = 6;
            return (0, _requestPromise2.default)(url);

          case 6:
            res = _context14.sent;


            t.same(res, '');

          case 8:
          case 'end':
            return _context14.stop();
        }
      }
    }, _callee14, undefined);
  }));
  return function (_x18) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('return <Object>', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee16(t) {
    var fn, url, res;
    return _regenerator2.default.wrap(function _callee16$(_context16) {
      while (1) {
        switch (_context16.prev = _context16.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee15(req, res) {
                return _regenerator2.default.wrap(function _callee15$(_context15) {
                  while (1) {
                    switch (_context15.prev = _context15.next) {
                      case 0:
                        return _context15.abrupt('return', { a: 'b' });

                      case 1:
                      case 'end':
                        return _context15.stop();
                    }
                  }
                }, _callee15, undefined);
              }));
              return function fn(_x22, _x23) {
                return ref.apply(this, arguments);
              };
            }();

            _context16.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context16.sent;
            _context16.next = 6;
            return (0, _requestPromise2.default)(url, { json: true });

          case 6:
            res = _context16.sent;


            t.same(res, { a: 'b' });

          case 8:
          case 'end':
            return _context16.stop();
        }
      }
    }, _callee16, undefined);
  }));
  return function (_x21) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('throw with code', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee18(t) {
    var fn, url;
    return _regenerator2.default.wrap(function _callee18$(_context18) {
      while (1) {
        switch (_context18.prev = _context18.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee17(req, res) {
                var err;
                return _regenerator2.default.wrap(function _callee17$(_context17) {
                  while (1) {
                    switch (_context17.prev = _context17.next) {
                      case 0:
                        _context17.next = 2;
                        return (0, _thenSleep2.default)(100);

                      case 2:
                        err = new Error('Error from test (expected)');

                        err.statusCode = 402;
                        throw err;

                      case 5:
                      case 'end':
                        return _context17.stop();
                    }
                  }
                }, _callee17, undefined);
              }));
              return function fn(_x25, _x26) {
                return ref.apply(this, arguments);
              };
            }();

            _context18.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context18.sent;
            _context18.prev = 4;
            _context18.next = 7;
            return (0, _requestPromise2.default)(url);

          case 7:
            _context18.next = 12;
            break;

          case 9:
            _context18.prev = 9;
            _context18.t0 = _context18['catch'](4);

            t.same(_context18.t0.statusCode, 402);

          case 12:
          case 'end':
            return _context18.stop();
        }
      }
    }, _callee18, undefined, [[4, 9]]);
  }));
  return function (_x24) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('throw (500)', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee20(t) {
    var fn, url;
    return _regenerator2.default.wrap(function _callee20$(_context20) {
      while (1) {
        switch (_context20.prev = _context20.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee19(req, res) {
                return _regenerator2.default.wrap(function _callee19$(_context19) {
                  while (1) {
                    switch (_context19.prev = _context19.next) {
                      case 0:
                        throw new Error('500 from test (expected)');

                      case 1:
                      case 'end':
                        return _context19.stop();
                    }
                  }
                }, _callee19, undefined);
              }));
              return function fn(_x28, _x29) {
                return ref.apply(this, arguments);
              };
            }();

            _context20.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context20.sent;
            _context20.prev = 4;
            _context20.next = 7;
            return (0, _requestPromise2.default)(url);

          case 7:
            _context20.next = 12;
            break;

          case 9:
            _context20.prev = 9;
            _context20.t0 = _context20['catch'](4);

            t.same(_context20.t0.statusCode, 500);

          case 12:
          case 'end':
            return _context20.stop();
        }
      }
    }, _callee20, undefined, [[4, 9]]);
  }));
  return function (_x27) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('custom error', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee22(t) {
    var fn, onError, url, res;
    return _regenerator2.default.wrap(function _callee22$(_context22) {
      while (1) {
        switch (_context22.prev = _context22.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee21(req, res) {
                return _regenerator2.default.wrap(function _callee21$(_context21) {
                  while (1) {
                    switch (_context21.prev = _context21.next) {
                      case 0:
                        (0, _thenSleep2.default)(50);
                        throw new Error('500 from test (expected)');

                      case 2:
                      case 'end':
                        return _context21.stop();
                    }
                  }
                }, _callee21, undefined);
              }));
              return function fn(_x31, _x32) {
                return ref.apply(this, arguments);
              };
            }();

            onError = function onError(req, res, err) {
              (0, _microCore.send)(res, 200, 'got error');
            };

            _context22.next = 4;
            return (0, _listen2.default)(fn, { onError: onError });

          case 4:
            url = _context22.sent;
            _context22.next = 7;
            return (0, _requestPromise2.default)(url);

          case 7:
            res = _context22.sent;


            t.same(res, 'got error');

          case 9:
          case 'end':
            return _context22.stop();
        }
      }
    }, _callee22, undefined);
  }));
  return function (_x30) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('custom async error', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee25(t) {
    var fn, onError, url, res;
    return _regenerator2.default.wrap(function _callee25$(_context25) {
      while (1) {
        switch (_context25.prev = _context25.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee23(req, res) {
                return _regenerator2.default.wrap(function _callee23$(_context23) {
                  while (1) {
                    switch (_context23.prev = _context23.next) {
                      case 0:
                        (0, _thenSleep2.default)(50);
                        throw new Error('500 from test (expected)');

                      case 2:
                      case 'end':
                        return _context23.stop();
                    }
                  }
                }, _callee23, undefined);
              }));
              return function fn(_x34, _x35) {
                return ref.apply(this, arguments);
              };
            }();

            onError = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee24(req, res, err) {
                return _regenerator2.default.wrap(function _callee24$(_context24) {
                  while (1) {
                    switch (_context24.prev = _context24.next) {
                      case 0:
                        _context24.next = 2;
                        return (0, _thenSleep2.default)(50);

                      case 2:
                        (0, _microCore.send)(res, 200, 'got async error');

                      case 3:
                      case 'end':
                        return _context24.stop();
                    }
                  }
                }, _callee24, undefined);
              }));
              return function onError(_x36, _x37, _x38) {
                return ref.apply(this, arguments);
              };
            }();

            _context25.next = 4;
            return (0, _listen2.default)(fn, { onError: onError });

          case 4:
            url = _context25.sent;
            _context25.next = 7;
            return (0, _requestPromise2.default)(url);

          case 7:
            res = _context25.sent;


            t.same(res, 'got async error');

          case 9:
          case 'end':
            return _context25.stop();
        }
      }
    }, _callee25, undefined);
  }));
  return function (_x33) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('json parse error', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee27(t) {
    var fn, url;
    return _regenerator2.default.wrap(function _callee27$(_context27) {
      while (1) {
        switch (_context27.prev = _context27.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee26(req, res) {
                var body;
                return _regenerator2.default.wrap(function _callee26$(_context26) {
                  while (1) {
                    switch (_context26.prev = _context26.next) {
                      case 0:
                        _context26.next = 2;
                        return (0, _microCore.json)(req);

                      case 2:
                        body = _context26.sent;

                        (0, _microCore.send)(res, 200, body.woot);

                      case 4:
                      case 'end':
                        return _context26.stop();
                    }
                  }
                }, _callee26, undefined);
              }));
              return function fn(_x40, _x41) {
                return ref.apply(this, arguments);
              };
            }();

            _context27.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context27.sent;
            _context27.prev = 4;
            _context27.next = 7;
            return (0, _requestPromise2.default)(url, {
              method: 'POST',
              body: '{ "bad json" }',
              headers: {
                'Content-Type': 'application/json'
              }
            });

          case 7:
            _context27.next = 12;
            break;

          case 9:
            _context27.prev = 9;
            _context27.t0 = _context27['catch'](4);

            t.same(_context27.t0.statusCode, 400);

          case 12:
          case 'end':
            return _context27.stop();
        }
      }
    }, _callee27, undefined, [[4, 9]]);
  }));
  return function (_x39) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('json', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee29(t) {
    var fn, url, body;
    return _regenerator2.default.wrap(function _callee29$(_context29) {
      while (1) {
        switch (_context29.prev = _context29.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee28(req, res) {
                var body;
                return _regenerator2.default.wrap(function _callee28$(_context28) {
                  while (1) {
                    switch (_context28.prev = _context28.next) {
                      case 0:
                        _context28.next = 2;
                        return (0, _microCore.json)(req);

                      case 2:
                        body = _context28.sent;

                        (0, _microCore.send)(res, 200, { response: body.some.cool });

                      case 4:
                      case 'end':
                        return _context28.stop();
                    }
                  }
                }, _callee28, undefined);
              }));
              return function fn(_x43, _x44) {
                return ref.apply(this, arguments);
              };
            }();

            _context29.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context29.sent;
            _context29.next = 6;
            return (0, _requestPromise2.default)(url, {
              method: 'POST',
              body: { some: { cool: 'json' } },
              json: true
            });

          case 6:
            body = _context29.sent;


            t.same(body.response, 'json');

          case 8:
          case 'end':
            return _context29.stop();
        }
      }
    }, _callee29, undefined);
  }));
  return function (_x42) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('json limit (below)', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee31(t) {
    var fn, url, body;
    return _regenerator2.default.wrap(function _callee31$(_context31) {
      while (1) {
        switch (_context31.prev = _context31.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee30(req, res) {
                var body;
                return _regenerator2.default.wrap(function _callee30$(_context30) {
                  while (1) {
                    switch (_context30.prev = _context30.next) {
                      case 0:
                        _context30.next = 2;
                        return (0, _microCore.json)(req, { limit: 100 });

                      case 2:
                        body = _context30.sent;

                        (0, _microCore.send)(res, 200, { response: body.some.cool });

                      case 4:
                      case 'end':
                        return _context30.stop();
                    }
                  }
                }, _callee30, undefined);
              }));
              return function fn(_x46, _x47) {
                return ref.apply(this, arguments);
              };
            }();

            _context31.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context31.sent;
            _context31.next = 6;
            return (0, _requestPromise2.default)(url, {
              method: 'POST',
              body: { some: { cool: 'json' } },
              json: true
            });

          case 6:
            body = _context31.sent;


            t.same(body.response, 'json');

          case 8:
          case 'end':
            return _context31.stop();
        }
      }
    }, _callee31, undefined);
  }));
  return function (_x45) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('json limit (over)', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee33(t) {
    var fn, url;
    return _regenerator2.default.wrap(function _callee33$(_context33) {
      while (1) {
        switch (_context33.prev = _context33.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee32(req, res) {
                var body;
                return _regenerator2.default.wrap(function _callee32$(_context32) {
                  while (1) {
                    switch (_context32.prev = _context32.next) {
                      case 0:
                        _context32.next = 2;
                        return (0, _microCore.json)(req, { limit: 3 });

                      case 2:
                        body = _context32.sent;

                        (0, _microCore.send)(res, 200, { response: body.some.cool });

                      case 4:
                      case 'end':
                        return _context32.stop();
                    }
                  }
                }, _callee32, undefined);
              }));
              return function fn(_x49, _x50) {
                return ref.apply(this, arguments);
              };
            }();

            _context33.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context33.sent;
            _context33.prev = 4;
            _context33.next = 7;
            return (0, _requestPromise2.default)(url, {
              method: 'POST',
              body: { some: { cool: 'json' } },
              json: true
            });

          case 7:
            _context33.next = 12;
            break;

          case 9:
            _context33.prev = 9;
            _context33.t0 = _context33['catch'](4);

            t.same(_context33.t0.statusCode, 413);

          case 12:
          case 'end':
            return _context33.stop();
        }
      }
    }, _callee33, undefined, [[4, 9]]);
  }));
  return function (_x48) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('json circular', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee35(t) {
    var fn, url;
    return _regenerator2.default.wrap(function _callee35$(_context35) {
      while (1) {
        switch (_context35.prev = _context35.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee34(req, res) {
                var obj;
                return _regenerator2.default.wrap(function _callee34$(_context34) {
                  while (1) {
                    switch (_context34.prev = _context34.next) {
                      case 0:
                        obj = { circular: true };

                        obj.obj = obj;
                        (0, _microCore.send)(res, 200, obj);

                      case 3:
                      case 'end':
                        return _context34.stop();
                    }
                  }
                }, _callee34, undefined);
              }));
              return function fn(_x52, _x53) {
                return ref.apply(this, arguments);
              };
            }();

            _context35.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context35.sent;
            _context35.prev = 4;
            _context35.next = 7;
            return (0, _requestPromise2.default)(url, { json: true });

          case 7:
            _context35.next = 12;
            break;

          case 9:
            _context35.prev = 9;
            _context35.t0 = _context35['catch'](4);

            t.same(_context35.t0.statusCode, 500);

          case 12:
          case 'end':
            return _context35.stop();
        }
      }
    }, _callee35, undefined, [[4, 9]]);
  }));
  return function (_x51) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('no async', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee36(t) {
    var fn, url, obj;
    return _regenerator2.default.wrap(function _callee36$(_context36) {
      while (1) {
        switch (_context36.prev = _context36.next) {
          case 0:
            fn = function fn(req, res) {
              (0, _microCore.send)(res, 200, { a: 'b' });
            };

            _context36.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context36.sent;
            _context36.next = 6;
            return (0, _requestPromise2.default)(url, { json: true });

          case 6:
            obj = _context36.sent;


            t.same(obj.a, 'b');

          case 8:
          case 'end':
            return _context36.stop();
        }
      }
    }, _callee36, undefined);
  }));
  return function (_x54) {
    return ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('limit included in error', function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee38(t) {
    var fn, url;
    return _regenerator2.default.wrap(function _callee38$(_context38) {
      while (1) {
        switch (_context38.prev = _context38.next) {
          case 0:
            fn = function () {
              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee37(req, res) {
                var body;
                return _regenerator2.default.wrap(function _callee37$(_context37) {
                  while (1) {
                    switch (_context37.prev = _context37.next) {
                      case 0:
                        _context37.next = 2;
                        return (0, _microCore.json)(req, { limit: 3 });

                      case 2:
                        body = _context37.sent;

                        (0, _microCore.send)(res, 200, { response: body.some.cool });

                      case 4:
                      case 'end':
                        return _context37.stop();
                    }
                  }
                }, _callee37, undefined);
              }));
              return function fn(_x56, _x57) {
                return ref.apply(this, arguments);
              };
            }();

            _context38.next = 3;
            return (0, _listen2.default)(fn);

          case 3:
            url = _context38.sent;
            _context38.prev = 4;
            _context38.next = 7;
            return (0, _requestPromise2.default)(url, {
              method: 'POST',
              body: { some: { cool: 'json' } },
              json: true
            });

          case 7:
            _context38.next = 12;
            break;

          case 9:
            _context38.prev = 9;
            _context38.t0 = _context38['catch'](4);

            t.ok(/exceeded 3 limit/.test(_context38.t0.message));

          case 12:
          case 'end':
            return _context38.stop();
        }
      }
    }, _callee38, undefined, [[4, 9]]);
  }));
  return function (_x55) {
    return ref.apply(this, arguments);
  };
}());