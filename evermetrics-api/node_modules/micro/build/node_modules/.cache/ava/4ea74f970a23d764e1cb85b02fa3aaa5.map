{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;AAEA,IAAI,eAAe,QAAQ,2BAAR,CAAf;;AAEJ,IAAI,gBAAgB,uBAAuB,YAAvB,CAAhB;;AAEJ,IAAI,qBAAqB,QAAQ,wCAAR,CAArB;;AAEJ,IAAI,qBAAqB,uBAAuB,kBAAvB,CAArB;;AAEJ,IAAI,OAAO,QAAQ,KAAR,CAAP;;AAEJ,IAAI,QAAQ,uBAAuB,IAAvB,CAAR;;AAEJ,IAAI,OAAO,QAAQ,SAAR,CAAP;;AAEJ,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,SAAO,OAAO,IAAI,UAAJ,GAAiB,GAAxB,GAA8B,EAAE,SAAS,GAAT,EAAhC,CAAT;CAArC;;AAEA,CAAC,GAAG,MAAM,OAAN,CAAJ,CAAmB,oBAAnB,EAAyC,UAAU,CAAV,EAAa;;;AACpD,IAAE,EAAF,uBAAK,uCAAK,IAAL;;;;IAAL,EADoD;CAAb,CAAzC;;AAIA,CAAC,GAAG,MAAM,OAAN,CAAJ,CAAmB,qBAAnB,EAA0C,YAAY;AACpD,MAAI,MAAM,CAAC,GAAG,mBAAmB,OAAnB,CAAJ,CAAgC,cAAc,OAAd,CAAsB,IAAtB,CAA2B,SAAS,QAAT,CAAkB,CAAlB,EAAqB;AACxF,QAAI,GAAJ,CADwF;AAExF,WAAO,cAAc,OAAd,CAAsB,IAAtB,CAA2B,SAAS,SAAT,CAAmB,SAAnB,EAA8B;AAC9D,aAAO,CAAP,EAAU;AACR,gBAAQ,UAAU,IAAV,GAAiB,UAAU,IAAV;AACvB,eAAK,CAAL;AACE,sBAAU,IAAV,GAAiB,CAAjB,CADF;AAEE,mBAAO,OAAO,YAAY;AACxB,kBAAI,MAAM,CAAC,GAAG,mBAAmB,OAAnB,CAAJ,CAAgC,cAAc,OAAd,CAAsB,IAAtB,CAA2B,SAAS,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B;AAC9F,uBAAO,cAAc,OAAd,CAAsB,IAAtB,CAA2B,SAAS,QAAT,CAAkB,QAAlB,EAA4B;AAC5D,yBAAO,CAAP,EAAU;AACR,4BAAQ,SAAS,IAAT,GAAgB,SAAS,IAAT;AACtB,2BAAK,CAAL;AACE,yBAAC,GAAG,KAAK,IAAL,CAAJ,CAAe,GAAf,EAAoB,GAApB,EAAyB,EAAE,GAAG,GAAH,EAA3B,EADF;;AADF,2BAIO,CAAL,CAJF;AAKE,2BAAK,KAAL;AACE,+BAAO,SAAS,IAAT,EAAP,CADF;AALF,qBADQ;mBAAV;iBADgC,EAW/B,OAXI,EAWK,SAXL,CAAP,CAD8F;eAA3B,CAA3D,CAAN;kBAcA,QAAQ,SAAR,CAfoB;AAgBxB,qBAAO,UAAU,GAAV,EAAe,GAAf,EAAoB;AACzB,uBAAO,IAAI,KAAJ,CAAU,KAAV,EAAiB,SAAjB,CAAP,CADyB;eAApB,CAhBiB;aAAZ,EAAP,CAAP,CAFF;;AADF,eAwBO,CAAL;AACE,kBAAM,UAAU,IAAV,CADR;;AAxBF,eA2BO,CAAL,CA3BF;AA4BE,eAAK,KAAL;AACE,mBAAO,UAAU,IAAV,EAAP,CADF;AA5BF,SADQ;OAAV;KADgC,EAkC/B,QAlCI,EAkCM,SAlCN,CAAP,CAFwF;GAArB,CAA3D,CAAN;MAsCA,QAAQ,SAAR,CAvCgD;AAwCpD,SAAO,UAAU,EAAV,EAAc;AACnB,WAAO,IAAI,KAAJ,CAAU,KAAV,EAAiB,SAAjB,CAAP,CADmB;GAAd,CAxC6C;CAAZ,EAA1C","file":"index.js","sourcesContent":["'use strict';\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _ava = require('ava');\n\nvar _ava2 = _interopRequireDefault(_ava);\n\nvar _lib = require('../lib/');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _ava2.default)('should export json', function (t) {\n  t.ok(_lib.json);\n});\n\n(0, _ava2.default)('should receive json', function () {\n  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(t) {\n    var url;\n    return _regenerator2.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return listen(function () {\n              var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(req, res) {\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        (0, _lib.send)(res, 200, { a: 'b' });\n\n                      case 1:\n                      case 'end':\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, undefined);\n              })),\n                  _this = undefined;\n              return function (_x2, _x3) {\n                return ref.apply(_this, arguments);\n              };\n            }());\n\n          case 2:\n            url = _context2.sent;\n\n          case 3:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  })),\n      _this = undefined;\n  return function (_x) {\n    return ref.apply(_this, arguments);\n  };\n}());\n\n// test regular string send\n// test json object send\n// test only code send\n// test manual httpCode error\n// test manual 500 error\n// test onError callback\n// test json parse error\n// test request error (?)"]}