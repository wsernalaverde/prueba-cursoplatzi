'use strict';

var _powerAssertRecorder = function _powerAssertRecorder() { var captured = []; function _capt(value, espath) { captured.push({ value: value, espath: espath }); return value; } function _expr(value, args) { var source = { content: args.content, filepath: args.filepath, line: args.line }; if (args.generator) { source.generator = true; } if (args.async) { source.async = true; } return { powerAssertContext: { value: value, events: captured }, source: source }; } return { _capt: _capt, _expr: _expr }; };

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _lib = require('../lib/');

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _listen = require('./_listen');

var _listen2 = _interopRequireDefault(_listen);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _ava2.default)('should export json', function (t) {
  var _rec = _powerAssertRecorder();

  t.ok(_rec._expr(_rec._capt(_rec._capt(_lib, 'arguments/0/object').json, 'arguments/0'), {
    content: 't.ok(_lib.json)',
    filepath: 'build/test/index.js',
    line: 20
  }));
});

//test('should receive json', async t => {
//const url = await listen(async (req, res) => {
//send(res, 200, { a: 'b' });
//});
////const req = await request(url);
////console.log(req);
//});

// test regular string send
// test json object send
// test only code send
// test manual httpCode error
// test manual 500 error
// test onError callback
// test json parse error
// test request error (?)