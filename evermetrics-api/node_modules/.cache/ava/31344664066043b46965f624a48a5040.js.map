{"version":3,"sources":["pictures-test.js"],"names":["t","id","v4","srv","req","res","url","body","uri","json","deepEqual"],"mappings":"AAAA;;;;;;;+aAEuB;AAGU;;;AAHjC;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAAsC;;AAEtC,mBAAK,UAAL;AAAA,6CAAiB,WAAMA,CAAN,EAAW;AAAA;AAAA;;AAC1B,QAAIC,KAAK,mBAAKC,EAAL,EAAT,CAD0B,CACP;;AAEnB,QAAIC,MAAM;AAAA,kDAAM,WAAOC,GAAP,EAAYC,GAAZ,EAAoB;AAClC,yBAAKA,GAAL,EAAU,GAAV,EAAe,EAAEJ,MAAF,EAAf,EADkC,CACX;AACxB,OAFS;;AAAA;AAAA;AAAA;AAAA,SAAV,CAH0B,CAKvB;;AAEH,QAAIK,MAAM,MAAM,0BAAOH,GAAP,CAAhB;AACA,QAAII,OAAO,MAAM,8BAAQ,EAAEC,KAAKF,GAAP,EAAYG,MAAM,IAAlB,EAAR,CAAjB;AACAT,MAAEU,SAAF,uBAAYH,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkB,EAAEN,MAAF,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAVD;;AAAA;AAAA;AAAA;AAAA","file":"pictures-test.js","sourcesContent":["'use strict'\n\nimport test from 'ava' // es lo mismo que require pero con la sintexis de emmascripts modules\nimport micro, { send } from 'micro'\nimport uuid from 'uuid-base62'\nimport listen from 'test-listen' // es una herramienta para hacer testing de microservicios con micro\nimport request from 'request-promise' // mÃ³dulo que me permite hacer http request utilizando promesas\n\ntest('Get /:id', async t => {\n  let id = uuid.v4() // generamos un id random\n\n  let srv = micro(async (req, res) => {\n    send(res, 200, { id }) // enviamos la respuesta\n  }) // creamos un servidor\n\n  let url = await listen(srv)\n  let body = await request({ uri: url, json: true })\n  t.deepEqual(body, { id })\n})\n"]}