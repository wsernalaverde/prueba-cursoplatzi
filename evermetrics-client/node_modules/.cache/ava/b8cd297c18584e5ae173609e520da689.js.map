{"version":3,"sources":["client-test.js"],"names":["test","require","evermetrics","fixtures","nock","options","endpoints","pictures","users","auth","beforeEach","t","context","client","createClient","is","getPicture","savePicture","likePicture","listPicture","listPictureByTag","saveUser","getUser","image","getImage","get","publicId","reply","result","getPictures","deepEqual"],"mappings":"AAAA;;;;;;;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,cAAcD,QAAQ,KAAR,CAApB;AACA,MAAME,WAAWF,QAAQ,aAAR,CAAjB;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;;AAEA,IAAII,UAAU;AACZC,aAAW;AACTC,cAAU,gCADD;AAETC,WAAO,8BAFE;AAGTC,UAAM;AAHG;AADC,CAAd;;AAQAT,KAAKU,UAAL,CAAgBC,KAAK;AACnBA,IAAEC,OAAF,CAAUC,MAAV,GAAmBX,YAAYY,YAAZ,CAAyBT,OAAzB,CAAnB;AACD,CAFD;;AAIAL,KAAK,QAAL,EAAeW,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAClB,QAAME,SAASF,EAAEC,OAAF,CAAUC,MAAzB;;AAEAF,IAAEI,EAAF,uBAAK,kBAAO,kDAAOC,UAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA+B,UAA/B;AACAL,IAAEI,EAAF,yBAAK,mBAAO,mDAAOE,WAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAgC,UAAhC;AACAN,IAAEI,EAAF,yBAAK,mBAAO,mDAAOG,WAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAgC,UAAhC;AACAP,IAAEI,EAAF,yBAAK,mBAAO,mDAAOI,WAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAgC,UAAhC;AACAR,IAAEI,EAAF,yBAAK,mBAAO,mDAAOK,gBAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAqC,UAArC;AACAT,IAAEI,EAAF,yBAAK,mBAAO,mDAAOM,QAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA6B,UAA7B;AACAV,IAAEI,EAAF,yBAAK,mBAAO,mDAAOO,OAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA4B,UAA5B;AACAX,IAAEI,EAAF,yBAAK,mBAAO,mDAAON,IAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyB,UAAzB;AACD,CAXD;;AAaAT,KAAK,YAAL;AAAA,6CAAmB,WAAMW,CAAN,EAAW;AAAA;AAAA;;AAC5B,UAAME,SAASF,EAAEC,OAAF,CAAUC,MAAzB;;AAEA,QAAIU,QAAQpB,SAASqB,QAAT,EAAZ;;AAEApB,SAAKC,QAAQC,SAAR,CAAkBC,QAAvB,EACGkB,GADH,CACQ,KAAGF,MAAMG,QAAS,GAD1B,EAEGC,KAFH,CAES,GAFT,EAEcJ,KAFd;;AAIA,QAAIK,SAAS,MAAMf,OAAOgB,WAAP,CAAmBN,MAAMG,QAAzB,CAAnB;;AAEAf,MAAEmB,SAAF,yBAAYP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAmBK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAZD;;AAAA;AAAA;AAAA;AAAA","file":"client-test.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\nconst evermetrics = require('../')\nconst fixtures = require('./fixtures/')\nconst nock = require('nock')\n\nlet options = {\n  endpoints: {\n    pictures: 'http://evermetrics.test/picure',\n    users: 'http://evermetrics.test/user',\n    auth: 'http://evermetrics.test/auth'\n  }\n}\n\ntest.beforeEach(t => {\n  t.context.client = evermetrics.createClient(options)\n})\n\ntest('client', t => {\n  const client = t.context.client\n\n  t.is(typeof client.getPicture, 'function')\n  t.is(typeof client.savePicture, 'function')\n  t.is(typeof client.likePicture, 'function')\n  t.is(typeof client.listPicture, 'function')\n  t.is(typeof client.listPictureByTag, 'function')\n  t.is(typeof client.saveUser, 'function')\n  t.is(typeof client.getUser, 'function')\n  t.is(typeof client.auth, 'function')\n})\n\ntest('getPicture', async t => {\n  const client = t.context.client\n\n  let image = fixtures.getImage()\n\n  nock(options.endpoints.pictures)\n    .get(`/${image.publicId}`)\n    .reply(200, image)\n\n  let result = await client.getPictures(image.publicId)\n\n  t.deepEqual(image, result)\n})\n"]}