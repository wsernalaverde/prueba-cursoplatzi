'use strict';

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareVariable":["id"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { return { powerAssertContext: { value: value, events: this.captured }, source: source }; }; return PowerAssertRecorder; }();

const test = require('ava');
const evermetrics = require('../');
// const fixtures = require('./fixtures/')

test('client', t => {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder();

  const client = evermetrics.createClient();

  t.is(_rec._expr(_rec._capt(typeof _rec._capt(_rec._capt(client, 'arguments/0/argument/object').getPicture, 'arguments/0/argument'), 'arguments/0'), {
    content: 't.is(typeof client.getPicture, \'function\')',
    filepath: 'test/client-test.js',
    line: 10,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"UnaryExpression","operator":"typeof","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"client","range":[12,18]},"property":{"type":"Identifier","name":"getPicture","range":[19,29]},"computed":false,"range":[12,29]},"prefix":true,"range":[5,29]},{"type":"StringLiteral","value":"function","range":[31,41]}],"range":[0,42]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"typeof"},"value":"typeof","range":[5,11]},{"type":{"label":"name"},"value":"client","range":[12,18]},{"type":{"label":"."},"range":[18,19]},{"type":{"label":"name"},"value":"getPicture","range":[19,29]},{"type":{"label":","},"range":[29,30]},{"type":{"label":"string"},"value":"function","range":[31,41]},{"type":{"label":")"},"range":[41,42]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'function');
  t.is(_rec2._expr(_rec2._capt(typeof _rec2._capt(_rec2._capt(client, 'arguments/0/argument/object').savePicture, 'arguments/0/argument'), 'arguments/0'), {
    content: 't.is(typeof client.savePicture, \'function\')',
    filepath: 'test/client-test.js',
    line: 11,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"UnaryExpression","operator":"typeof","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"client","range":[12,18]},"property":{"type":"Identifier","name":"savePicture","range":[19,30]},"computed":false,"range":[12,30]},"prefix":true,"range":[5,30]},{"type":"StringLiteral","value":"function","range":[32,42]}],"range":[0,43]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"typeof"},"value":"typeof","range":[5,11]},{"type":{"label":"name"},"value":"client","range":[12,18]},{"type":{"label":"."},"range":[18,19]},{"type":{"label":"name"},"value":"savePicture","range":[19,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"function","range":[32,42]},{"type":{"label":")"},"range":[42,43]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'function');
  t.is(_rec3._expr(_rec3._capt(typeof _rec3._capt(_rec3._capt(client, 'arguments/0/argument/object').likePicture, 'arguments/0/argument'), 'arguments/0'), {
    content: 't.is(typeof client.likePicture, \'function\')',
    filepath: 'test/client-test.js',
    line: 12,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"UnaryExpression","operator":"typeof","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"client","range":[12,18]},"property":{"type":"Identifier","name":"likePicture","range":[19,30]},"computed":false,"range":[12,30]},"prefix":true,"range":[5,30]},{"type":"StringLiteral","value":"function","range":[32,42]}],"range":[0,43]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"typeof"},"value":"typeof","range":[5,11]},{"type":{"label":"name"},"value":"client","range":[12,18]},{"type":{"label":"."},"range":[18,19]},{"type":{"label":"name"},"value":"likePicture","range":[19,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"function","range":[32,42]},{"type":{"label":")"},"range":[42,43]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'function');
  t.is(_rec4._expr(_rec4._capt(typeof _rec4._capt(_rec4._capt(client, 'arguments/0/argument/object').listPicture, 'arguments/0/argument'), 'arguments/0'), {
    content: 't.is(typeof client.listPicture, \'function\')',
    filepath: 'test/client-test.js',
    line: 13,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"UnaryExpression","operator":"typeof","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"client","range":[12,18]},"property":{"type":"Identifier","name":"listPicture","range":[19,30]},"computed":false,"range":[12,30]},"prefix":true,"range":[5,30]},{"type":"StringLiteral","value":"function","range":[32,42]}],"range":[0,43]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"typeof"},"value":"typeof","range":[5,11]},{"type":{"label":"name"},"value":"client","range":[12,18]},{"type":{"label":"."},"range":[18,19]},{"type":{"label":"name"},"value":"listPicture","range":[19,30]},{"type":{"label":","},"range":[30,31]},{"type":{"label":"string"},"value":"function","range":[32,42]},{"type":{"label":")"},"range":[42,43]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'function');
  t.is(_rec5._expr(_rec5._capt(typeof _rec5._capt(_rec5._capt(client, 'arguments/0/argument/object').listPictureByTag, 'arguments/0/argument'), 'arguments/0'), {
    content: 't.is(typeof client.listPictureByTag, \'function\')',
    filepath: 'test/client-test.js',
    line: 14,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"UnaryExpression","operator":"typeof","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"client","range":[12,18]},"property":{"type":"Identifier","name":"listPictureByTag","range":[19,35]},"computed":false,"range":[12,35]},"prefix":true,"range":[5,35]},{"type":"StringLiteral","value":"function","range":[37,47]}],"range":[0,48]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"typeof"},"value":"typeof","range":[5,11]},{"type":{"label":"name"},"value":"client","range":[12,18]},{"type":{"label":"."},"range":[18,19]},{"type":{"label":"name"},"value":"listPictureByTag","range":[19,35]},{"type":{"label":","},"range":[35,36]},{"type":{"label":"string"},"value":"function","range":[37,47]},{"type":{"label":")"},"range":[47,48]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'function');
  t.is(_rec6._expr(_rec6._capt(typeof _rec6._capt(_rec6._capt(client, 'arguments/0/argument/object').saveUser, 'arguments/0/argument'), 'arguments/0'), {
    content: 't.is(typeof client.saveUser, \'function\')',
    filepath: 'test/client-test.js',
    line: 15,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"UnaryExpression","operator":"typeof","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"client","range":[12,18]},"property":{"type":"Identifier","name":"saveUser","range":[19,27]},"computed":false,"range":[12,27]},"prefix":true,"range":[5,27]},{"type":"StringLiteral","value":"function","range":[29,39]}],"range":[0,40]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"typeof"},"value":"typeof","range":[5,11]},{"type":{"label":"name"},"value":"client","range":[12,18]},{"type":{"label":"."},"range":[18,19]},{"type":{"label":"name"},"value":"saveUser","range":[19,27]},{"type":{"label":","},"range":[27,28]},{"type":{"label":"string"},"value":"function","range":[29,39]},{"type":{"label":")"},"range":[39,40]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'function');
  t.is(_rec7._expr(_rec7._capt(typeof _rec7._capt(_rec7._capt(client, 'arguments/0/argument/object').getUser, 'arguments/0/argument'), 'arguments/0'), {
    content: 't.is(typeof client.getUser, \'function\')',
    filepath: 'test/client-test.js',
    line: 16,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"UnaryExpression","operator":"typeof","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"client","range":[12,18]},"property":{"type":"Identifier","name":"getUser","range":[19,26]},"computed":false,"range":[12,26]},"prefix":true,"range":[5,26]},{"type":"StringLiteral","value":"function","range":[28,38]}],"range":[0,39]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"typeof"},"value":"typeof","range":[5,11]},{"type":{"label":"name"},"value":"client","range":[12,18]},{"type":{"label":"."},"range":[18,19]},{"type":{"label":"name"},"value":"getUser","range":[19,26]},{"type":{"label":","},"range":[26,27]},{"type":{"label":"string"},"value":"function","range":[28,38]},{"type":{"label":")"},"range":[38,39]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'function');
  t.is(_rec8._expr(_rec8._capt(typeof _rec8._capt(_rec8._capt(client, 'arguments/0/argument/object').auth, 'arguments/0/argument'), 'arguments/0'), {
    content: 't.is(typeof client.auth, \'function\')',
    filepath: 'test/client-test.js',
    line: 17,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"UnaryExpression","operator":"typeof","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"client","range":[12,18]},"property":{"type":"Identifier","name":"auth","range":[19,23]},"computed":false,"range":[12,23]},"prefix":true,"range":[5,23]},{"type":"StringLiteral","value":"function","range":[25,35]}],"range":[0,36]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"typeof"},"value":"typeof","range":[5,11]},{"type":{"label":"name"},"value":"client","range":[12,18]},{"type":{"label":"."},"range":[18,19]},{"type":{"label":"name"},"value":"auth","range":[19,23]},{"type":{"label":","},"range":[23,24]},{"type":{"label":"string"},"value":"function","range":[25,35]},{"type":{"label":")"},"range":[35,36]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 'function');
});
//# sourceMappingURL=../node_modules/.cache/ava/4ae3e641bd23a7782e1eaaae33e5a8c6.js.map