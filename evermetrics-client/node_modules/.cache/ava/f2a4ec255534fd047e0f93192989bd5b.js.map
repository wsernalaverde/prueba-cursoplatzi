{"version":3,"sources":["client-test.js"],"names":["test","require","nock","evermetrics","fixtures","options","endpoints","pictures","users","auth","estadisticas","beforeEach","t","context","client","createClient","is","getPicture","savePicture","likePicture","listPicture","listPictureByTag","getEstadisiticas","saveEstadisticas","saveUser","getUser","image","getImage","get","publicId","reply","result","deepEqual","dates","getEstadisticas","token","newDates","year","month","allfans","newfans","nolikes","prints","activeusers","reqheaders","post","newImage","src","description","liked","likes","images","getImages","tag","user","newUser","username","name","email","password","credentials"],"mappings":"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","file":"client-test.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\nconst nock = require('nock')\nconst evermetrics = require('../')\nconst fixtures = require('./fixtures/')\n\nlet options = {\n  endpoints: {\n    pictures: 'http://evermetrics.test/picure',\n    users: 'http://evermetrics.test/user',\n    auth: 'http://evermetrics.test/auth',\n    estadisticas: 'http://evermetrics.test/datos'\n  }\n}\n\ntest.beforeEach(t => {\n  t.context.client = evermetrics.createClient(options)\n})\n\ntest('client', t => {\n  const client = t.context.client\n\n  t.is(typeof client.getPicture, 'function')\n  t.is(typeof client.savePicture, 'function')\n  t.is(typeof client.likePicture, 'function')\n  t.is(typeof client.listPicture, 'function')\n  t.is(typeof client.listPictureByTag, 'function')\n  t.is(typeof client.getEstadisiticas, 'function')\n  t.is(typeof client.saveEstadisticas, 'function')\n  t.is(typeof client.saveUser, 'function')\n  t.is(typeof client.getUser, 'function')\n  t.is(typeof client.auth, 'function')\n})\n\ntest('getPicture', async t => {\n  const client = t.context.client\n\n  let image = fixtures.getImage()\n\n  nock(options.endpoints.pictures)\n    .get(`/${image.publicId}`)\n    .reply(200, image)\n\n  let result = await client.getPicture(image.publicId)\n\n  t.deepEqual(image, result)\n})\n\ntest('getEstadisiticas', async t => {\n  const client = t.context.client\n\n  let dates = fixtures.getEstadisticas()\n\n  nock(options.endpoints.estadisticas)\n    .get(`/${dates.publicId}`)\n    .reply(200, dates)\n\n  let result = await client.getEstadisiticas(dates.publicId)\n\n  t.deepEqual(dates, result)\n})\n\ntest('saveEstadisticas', async t => {\n  const client = t.context.client\n\n  let token = 'xxx-xxx-xxx'\n  let dates = fixtures.getEstadisticas()\n  let newDates = {\n    year: dates.year,\n    month: dates.month,\n    allfans: dates.allfans,\n    newfans: dates.newfans,\n    nolikes: dates.nolikes,\n    prints: dates.prints,\n    activeusers: dates.activeusers\n  }\n\n  nock(options.endpoints.estadisticas, {\n    reqheaders: {\n      'Authorization': `Bearer ${token}`\n    }\n  })\n    .post('/', newDates)\n    .reply(201, dates)\n\n  let result = await client.saveEstadisticas(newDates, token)\n\n  t.deepEqual(result, dates)\n})\n\ntest('savePicture', async t => {\n  const client = t.context.client\n\n  let token = 'xxx-xxx-xxx'\n  let image = fixtures.getImage()\n  let newImage = {\n    src: image.src,\n    description: image.description\n  }\n\n  nock(options.endpoints.pictures, {\n    reqheaders: {\n      'Authorization': `Bearer ${token}`\n    }\n  })\n    .post('/', newImage)\n    .reply(201, image)\n\n  let result = await client.savePicture(newImage, token)\n\n  t.deepEqual(result, image)\n})\n\ntest('likePicture', async t => {\n  const client = t.context.client\n\n  let image = fixtures.getImage()\n  image.liked = true\n  image.likes = 1\n\n  nock(options.endpoints.pictures)\n    .post(`/${image.publicId}/like`)\n    .reply(200, image)\n\n  let result = await client.likePicture(image.publicId)\n\n  t.deepEqual(image, result)\n})\n\ntest('listPicture', async t => {\n  const client = t.context.client\n\n  let images = fixtures.getImages(3)\n\n  nock(options.endpoints.pictures)\n    .get('/list')\n    .reply(200, images)\n\n  let result = await client.listPicture()\n\n  t.deepEqual(images, result)\n})\n\ntest('listPictureByTag', async t => {\n  const client = t.context.client\n\n  let images = fixtures.getImages(3)\n  let tag = 'evermetrics'\n\n  nock(options.endpoints.pictures)\n    .get(`/tag/${tag}`)\n    .reply(200, images)\n\n  let result = await client.listPictureByTag(tag)\n\n  t.deepEqual(images, result)\n})\n\ntest('saveUser', async t => {\n  const client = t.context.client\n\n  let user = fixtures.getUser()\n  let newUser = {\n    username: user.username,\n    name: user.name,\n    email: 'user@evermetrics.test',\n    password: 'ev4r'\n  }\n\n  nock(options.endpoints.users)\n    .post('/', newUser)\n    .reply(201, user)\n\n  let result = await client.saveUser(newUser)\n\n  t.deepEqual(result, user)\n})\n\ntest('getUser', async t => {\n  const client = t.context.client\n\n  let user = fixtures.getUser()\n\n  nock(options.endpoints.users)\n    .get(`/${user.username}`)\n    .reply(200, user)\n\n  let result = await client.getUser(user.username)\n\n  t.deepEqual(result, user)\n})\n\ntest('auth', async t => {\n  const client = t.context.client\n\n  let credentials = {\n    username: 'wserna',\n    password: 'ev4r'\n  }\n\n  let token = 'xxx-xxx-xxx'\n\n  nock(options.endpoints.auth)\n    .post('/', credentials)\n    .reply(200, token)\n\n  let result = await client.auth(credentials.username, credentials.password)\n\n  t.deepEqual(result, token)\n})\n"]}